<?php

namespace app\models\data;

use Yii;

/**
 * This is the model class for table "tour".
 *
 * @property integer $id
 * @property string $name
 * @property string $recurring
 * @property string $currency
 * @property integer $ticket_available
 * @property integer $ticket_booking_available
 * @property integer $ticket_minimum
 * @property integer $manager_id
 * @property integer $customer_ticket_limit
 * @property string $notice
 * @property string $start_tour_date
 * @property string $start_tour_time
 * @property string $end_tour_date
 * @property string $end_tour_time
 * @property integer $tax_id
 * @property array $logo generated filename on server
 * @property string $filename source filename from client
 * @property string $e_phone
 * @property string $meeting_point
 * @property string $link_info
 * @property string $confirmation_mail
 *
 * @property Variant[] $variants
 *
 * @package app\models\data
 * @version 1.0
 *
 * @author Alex Zakharov <alexzakharovwork@gmail.com>
 */
class Tour extends \app\base\ActiveRecord
{
    /**
     * @var mixed image the attribute for rendering the file input
     * widget for upload on the form
     */
    public $image;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'tour';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['tax_id', 'manager_id', 'ticket_available', 'ticket_booking_available', 'ticket_minimum', 'customer_ticket_limit'], 'integer'],
            [['e_phone', 'meeting_point', 'start_tour_date', 'start_tour_time', 'end_tour_date', 'end_tour_time', 'name', 'recurring', 'notice', 'description'], 'string', 'max' => 255],
            [['confirmation_mail'], 'safe'],
            [['image'], 'safe'],
            [['image'], 'file', 'extensions'=>'jpg, gif, png'],
            [['link_info'], 'safe'],
            [['time_zone'], 'string', 'max' => 50],
            [['currency'], 'string', 'max' => 3],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'                       => 'ID',
            'name'                     => 'Name',
            'description'              => 'Short Description',
            'recurring'                => 'Recurring',
            'currency'                 => 'Currency',
            'time_zone'                => 'Time Zone',
            'ticket_available'         => 'Ticket Available',
            'ticket_booking_available' => 'Ticket Booking Available',
            'ticket_minimum'           => 'Ticket Minimum',
            'manager_id'               => 'Manager_id',
            'customer_ticket_limit'    => 'Customer Ticket Limit',
            'notice'                   => 'Notice',
            'start_tour_date'          => 'Start Tour Date',
            'start_tour_time'          => 'Start Tour Time',
            'end_tour_date'            => 'End Tour Date',
            'end_tour_time'            => 'End Tour Time',
            'tax_id'                   => 'Tax ID',
            'image'                    => 'Image',
            'e_phone'                  => 'Emergencies Phone',
            'meeting_point'            => 'Meeting Point',
            'link_info'                => 'Link Terms and Condition',
            'confirmation_mail'        => 'Confirmation mail content',
        ];
    }

    /**
     * @inheritdoc
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function beforeDelete()
    {
        if (parent::beforeDelete()) {
            foreach ($this->variants as $variant) {
                $variant->delete();
            }
            return true;
        } else {
            return false;
        }
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getVariants()
    {
        return $this->hasMany(Variant::className(), ['tour_id' => 'id']);
    }

}
